name: UpdateBuildBase

on:
  workflow_dispatch:
  schedule:
    - cron: "15 23 */3 * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/LICENSE"
      - "**/README.md"
      - "**/getting_start.sh"
  # pull_request:
  #   branches:
  #     - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "UpdateBuildBase"
  UpdateBuildBase:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set some variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "build_base_date=$(TZ=':Asia/Taipei' date +%F)" >> $GITHUB_ENV
          echo "boost_version=$(curl -sSL -H 'Accept: application/vnd.github.v3+json' \
                'https://api.github.com/repos/boostorg/boost/tags?per_page=32' |
                grep 'name' | cut -d\" -f4 | grep -vE 'alpha|beta|rc|test|week' |
                sed 's/boost-//' | sort -Vr | head -n 1)" >> $GITHUB_ENV
          echo "libtorrent_latest_commit_hash=$(curl -sL -H 'Accept: application/vnd.github.v3+json' \
                'https://api.github.com/repos/arvidn/libtorrent/commits?sha=RC_1_2&per_page=1' |
                grep -Fm1 'sha' | cut -d'"' -f4)" >> $GITHUB_ENV
          echo "qt_latest_tag_name=$(curl -sSL -H 'Accept: application/vnd.github.v3+json' \
                'https://api.github.com/repos/qt/qtbase/tags?per_page=32' |
                grep 'name' | cut -d\" -f4 | grep -vE 'alpha|beta|rc|test|week' |
                grep -E '^v5' | sort -Vr | head -n 1)" >> $GITHUB_ENV
        shell: bash
      # Runs a set of commands using the runners shell
      - name: Force push `build_base` branch
        run: |
          git config --local user.name "actions"
          git config --local user.email "action@github.com"
          git checkout build_base
          git reset --hard origin/master
          sed -i -E "s/^ENV build_base_date=[^\ ]+/ENV build_base_date=${build_base_date:?empty value}/" qbee_alpine_build_base.Dockerfile
          sed -i -E "s/^ENV boost_version=[^\ ]+/ENV boost_version=${boost_version:?empty value}/" qbee_alpine_build_base.Dockerfile
          sed -i -E "s/^ENV libtorrent_latest_commit_hash=.+/ENV libtorrent_latest_commit_hash=${libtorrent_latest_commit_hash:?empty value}/" qbee_alpine_build_base.Dockerfile
          sed -i -E "s/^ENV qt_latest_tag_name=.+/ENV qt_latest_tag_name=${qt_latest_tag_name:?empty value}/" qbee_alpine_build_base.Dockerfile
          git add qbee_alpine_build_base.Dockerfile
          git rm release.Dockerfile qbee.Dockerfile
          git rm -r .github
          git commit -m "${{ env.RELEASE_NAME }}"
          git push -f -u origin build_base
